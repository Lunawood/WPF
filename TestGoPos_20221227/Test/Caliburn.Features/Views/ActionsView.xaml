<Page x:Class="Caliburn.Features.Views.ActionsView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Caliburn.Features.Views"
      xmlns:cm="http://caliburnmicro.com"
      xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
      mc:Ignorable="d" 
      d:DesignHeight="300" d:DesignWidth="300"
      Title="Actions Sample View">

    <Page.Resources>
        <Style x:Key="ActionButtonStyle" TargetType="Button">
            <Setter Property="Margin" Value="0,10,0,0" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
        </Style>
    </Page.Resources>
    
    <Grid>
        <ScrollViewer>
            <StackPanel Margin="24,12">
                <TextBlock>
                    <Run Text="Output: " FontWeight="Bold" />
                    <Run Text="{Binding Output}" />
                </TextBlock>

                <TextBlock Text="Name" />
                <TextBox x:Name="Name" Margin="0,10,0,0" HorizontalAlignment="Stretch" />

                <Button x:Name="Clear" Content="Clear" Style="{StaticResource ActionButtonStyle}" />
                
                <!-- 아래 3개 같은 이벤트 처리하는 코드입니다.-->
                <!-- x:Name 지정된 SimpleSayHello 이벤트 처리 메소드 찾아서 실행 -->
                <Button x:Name="SimpleSayHello" Content="Simple Say Hello" Style="{StaticResource ActionButtonStyle}" />
                <!-- Caliburn.Micro의 Message.Attach로 이벤트 처리 메소드 지정해서 실행 -->
                <Button cm:Message.Attach="SimpleSayHello" Content="Simple Say Hello (using Message.Attach)" Style="{StaticResource ActionButtonStyle}" />
                <!-- WPF의 XML Behavior의 트리거 동작으로 이벤트 지정하는 Full Syntax 코드입니다. -->
                <Button x:Name="FullSyntax" Content="Simple Say Hello (Full Behaviour Syntax)" Style="{StaticResource ActionButtonStyle}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <cm:ActionMessage MethodName="SimpleSayHello" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>

                <!-- Caliburn.Micro의 Message.Attach로 마우스 더블 클릭시에만 SimpleSayHello 실행됩니다. -->
                <Button cm:Message.Attach="[Event MouseDoubleClick] = [SimpleSayHello]" Content="Simple Say Hello (Custom Event - Double Tapped)" Style="{StaticResource ActionButtonStyle}" />

                <!-- 아래 2개 같은 이벤트 처리하는 코드입니다. (CanSayHello 로 Name TextBox에 값이 있는 없는지 체크하고 버튼 활성화함)-->
                <Button x:Name="SayHello" Content="Say Hello (with parameter)" Style="{StaticResource ActionButtonStyle}" />
                <Button cm:Message.Attach="SayHello(Name)" Content="Say Hello (with parameter and Message.Attach)" Style="{StaticResource ActionButtonStyle}"/>

                <!-- 비동기 형식의 이벤트 처리 메소드를 연결하는 코드입니다. (CanSayGoodbye 로 Name TextBox에 값이 있는 없는지 체크하고 버튼 활성화함) -->
                <Button x:Name="SayGoodbye" Content="Say Goodbye (async method)" Style="{StaticResource ActionButtonStyle}" />
            </StackPanel>
        </ScrollViewer>
    </Grid>
</Page>